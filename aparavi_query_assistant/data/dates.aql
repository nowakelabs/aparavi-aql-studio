# Date Template Variables in AQL Queries

# The following date template variables are available:
# Format: "variable_name": "aql_expression"

{
  "{{TODAY}}": "TODAY()",
  
  "{{DATE_MINUS_30_DAYS}}": "case when (month(TODAY())-1<1) then (date(concat(cast(YEAR(TODAY())-1 as STRING),'-',lpad(cast(month(TODAY())+12-1 as STRING),2,'0'),'-',lpad(cast(case when (month(TODAY())+12-1=2 and day(TODAY())>28) then 28 when (month(TODAY())+12-1=4 or month(TODAY())+12-1=6 or month(TODAY())+12-1=9 or month(TODAY())+12-1=11) and day(TODAY())>30 then 30 else day(TODAY()) end as STRING),2,'0')))) else (date(concat(cast(YEAR(TODAY()) as STRING),'-',lpad(cast(month(TODAY())-1 as STRING),2,'0'),'-',lpad(cast(case when (month(TODAY())-1=2 and day(TODAY())>28) then 28 when (month(TODAY())-1=4 or month(TODAY())-1=6 or month(TODAY())-1=9 or month(TODAY())-1=11) and day(TODAY())>30 then 30 else day(TODAY()) end as STRING),2,'0')))) end",
  
  "{{DATE_MINUS_90_DAYS}}": "case when (month(TODAY())-3<1) then (date(concat(cast(YEAR(TODAY())-1 as STRING),'-',lpad(cast(month(TODAY())+12-3 as STRING),2,'0'),'-',lpad(cast(case when (month(TODAY())+12-3=2 and day(TODAY())>28) then 28 when (month(TODAY())+12-3=4 or month(TODAY())+12-3=6 or month(TODAY())+12-3=9 or month(TODAY())+12-3=11) and day(TODAY())>30 then 30 else day(TODAY()) end as STRING),2,'0')))) else (date(concat(cast(YEAR(TODAY()) as STRING),'-',lpad(cast(month(TODAY())-3 as STRING),2,'0'),'-',lpad(cast(case when (month(TODAY())-3=2 and day(TODAY())>28) then 28 when (month(TODAY())-3=4 or month(TODAY())-3=6 or month(TODAY())-3=9 or month(TODAY())-3=11) and day(TODAY())>30 then 30 else day(TODAY()) end as STRING),2,'0')))) end",
  
  "{{DATE_MINUS_6_MONTHS}}": "case when (month(TODAY())-6<1) then (date(concat(cast(YEAR(TODAY())-1 as STRING),'-',lpad(cast(month(TODAY())+12-6 as STRING),2,'0'),'-',lpad(cast(case when (month(TODAY())+12-6=2 and day(TODAY())>28) then 28 when (month(TODAY())+12-6=4 or month(TODAY())+12-6=6 or month(TODAY())+12-6=9 or month(TODAY())+12-6=11) and day(TODAY())>30 then 30 else day(TODAY()) end as STRING),2,'0')))) else (date(concat(cast(YEAR(TODAY()) as STRING),'-',lpad(cast(month(TODAY())-6 as STRING),2,'0'),'-',lpad(cast(case when (month(TODAY())-6=2 and day(TODAY())>28) then 28 when (month(TODAY())-6=4 or month(TODAY())-6=6 or month(TODAY())-6=9 or month(TODAY())-6=11) and day(TODAY())>30 then 30 else day(TODAY()) end as STRING),2,'0')))) end",
  
  "{{DATE_MINUS_1_YEAR}}": "date(concat(cast(YEAR(TODAY())-1 as STRING),'-',lpad(cast(MONTH(TODAY()) as STRING),2,'0'),'-',lpad(cast(DAY(TODAY()) as STRING),2,'0')))",
  
  "{{DATE_MINUS_2_YEARS}}": "date(concat(cast(YEAR(TODAY())-2 as STRING),'-',lpad(cast(MONTH(TODAY()) as STRING),2,'0'),'-',lpad(cast(DAY(TODAY()) as STRING),2,'0')))",
  
  "{{DATE_MINUS_3_YEARS}}": "date(concat(cast(YEAR(TODAY())-3 as STRING),'-',lpad(cast(MONTH(TODAY()) as STRING),2,'0'),'-',lpad(cast(DAY(TODAY()) as STRING),2,'0')))",
  
  "{{DATE_MINUS_5_YEARS}}": "date(concat(cast(YEAR(TODAY())-5 as STRING),'-',lpad(cast(MONTH(TODAY()) as STRING),2,'0'),'-',lpad(cast(DAY(TODAY()) as STRING),2,'0')))",
  
  "{{DATE_MINUS_7_YEARS}}": "date(concat(cast(YEAR(TODAY())-7 as STRING),'-',lpad(cast(MONTH(TODAY()) as STRING),2,'0'),'-',lpad(cast(DAY(TODAY()) as STRING),2,'0')))",
  
  "{{DATE_MINUS_10_YEARS}}": "date(concat(cast(YEAR(TODAY())-10 as STRING),'-',lpad(cast(MONTH(TODAY()) as STRING),2,'0'),'-',lpad(cast(DAY(TODAY()) as STRING),2,'0')))"
}

# Note: This JSON structure makes it easier to programmatically load 
# these variables and their corresponding AQL expressions.
# 
# The expressions handle month-end logic correctly:
# - For February: Caps at 28 days
# - For 30-day months (April, June, September, November): Caps at 30 days
# - For 31-day months: Keeps the original day